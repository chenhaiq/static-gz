// Generated by IcedCoffeeScript 1.4.0c
(function() {
  var expect, staticGz;

  staticGz = require("../lib/static_gz");

  expect = require("expect.js");

  describe("static_gz", function() {
    it("do nothing for none gz files", function(done) {
      var compressed, item, req, res, test_spec, _i, _len;
      test_spec = ["a.txt", "a.html", "a.gz.txt", ".gz", "a.b.txt"];
      compressed = staticGz.compressed();
      for (_i = 0, _len = test_spec.length; _i < _len; _i++) {
        item = test_spec[_i];
        req = {
          url: item
        };
        res = {};
        res.set = function(header) {
          return res.header = header;
        };
        compressed(req, res);
        (expect(res.header)).to.eql(void 0);
      }
      return done();
    });
    return it("set response header for gz", function(done) {
      var compressed, item, req, res, test_spec, _i, _len;
      test_spec = [["a.txt.gz", "text/plain"], ["a.html.gz", "text/html"], ["a.b.txt.gz", "text/plain"], ["a.gz", "text/plain"]];
      compressed = staticGz.compressed();
      for (_i = 0, _len = test_spec.length; _i < _len; _i++) {
        item = test_spec[_i];
        req = {
          url: item[0]
        };
        res = {};
        res.set = function(header) {
          return res.header = header;
        };
        compressed(req, res);
        (expect(res.header['Content-Type'])).to.eql(item[1]);
      }
      return done();
    });
  });

}).call(this);
